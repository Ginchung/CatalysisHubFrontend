/*
 *
 * PlotlyDemo
 *
 */

import React, { PropTypes } from 'react';
import { connect } from 'react-redux';
import Plot from 'react-plotly.js';

import linspace from 'linspace';
import unpack from 'ndarray-unpack';
import zeros from 'zeros';

import { MdWarning } from 'react-icons/lib/md';

import {
  clickDot,
} from './actions';

export class PlotlyDemo extends React.Component { // eslint-disable-line react/prefer-stateless-function
  plotDoubleClick(event) {
    console.log('DC EVENT');
    console.log(event);
  }
  render() {
    const size = 100;
    const x = linspace(-2 * Math.PI, 2 * Math.PI, size);
    const y = linspace(-2 * Math.PI, 2 * Math.PI, size);
    const z = unpack(zeros([size, size]));
    let r2 = 0.0;
    for (let i = 0; i < size; i += 1) {
      for (let j = 0; j < size; j += 1) {
        r2 = ((x * (i * i)) + (y * (j * j)));
        z[i][j] = (Math.sin(x * i) * Math.cos(y * j) * Math.sin(r2)) / Math.log(r2 + 1);
      }
    }
    return (
      <div>
        <h2>Your Next App</h2>
        <div><MdWarning />Under construction.</div>
        <div>{JSON.stringify(this.props.selectedDot)}</div>
        <div>
        </div>
        <div>
          <Plot
            data={[
              {
                x: [0.0, 0.05, 0.11, 0.16, 0.21, 0.26, 0.32, 0.37, 0.42, 0.47, 0.53, 0.58, 0.63, 0.68, 0.74, 0.79, 0.84, 0.89, 0.95, 1.0],
                y: [0.0, 0.05, 0.11, 0.16, 0.21, 0.26, 0.32, 0.37, 0.42, 0.47, 0.53, 0.58, 0.63, 0.68, 0.74, 0.79, 0.84, 0.89, 0.95, 1.0],
                z: [[1.0, 1.16, 1.32, 1.48, 1.61, 1.74, 1.84, 1.92, 1.97, 2.0, 2.0, 1.97, 1.92, 1.84, 1.74, 1.61, 1.48, 1.32, 1.16, 1.0],
                      [0.99, 1.15, 1.31, 1.46, 1.6, 1.72, 1.82, 1.9, 1.96, 1.98, 1.98, 1.96, 1.9, 1.82, 1.72, 1.6, 1.46, 1.31, 1.15, 0.99],
                      [0.95, 1.11, 1.27, 1.42, 1.56, 1.68, 1.78, 1.86, 1.92, 1.94, 1.94, 1.92, 1.86, 1.78, 1.68, 1.56, 1.42, 1.27, 1.11, 0.95],
                      [0.88, 1.04, 1.2, 1.36, 1.49, 1.62, 1.72, 1.8, 1.85, 1.88, 1.88, 1.85, 1.8, 1.72, 1.62, 1.49, 1.36, 1.2, 1.04, 0.88],
                      [0.79, 0.95, 1.11, 1.27, 1.4, 1.52, 1.63, 1.7, 1.76, 1.79, 1.79, 1.76, 1.7, 1.63, 1.52, 1.4, 1.27, 1.11, 0.95, 0.79],
                      [0.68, 0.84, 1.0, 1.15, 1.29, 1.41, 1.51, 1.59, 1.65, 1.67, 1.67, 1.65, 1.59, 1.51, 1.41, 1.29, 1.15, 1.0, 0.84, 0.68],
                      [0.55, 0.71, 0.87, 1.02, 1.16, 1.28, 1.38, 1.46, 1.52, 1.54, 1.54, 1.52, 1.46, 1.38, 1.28, 1.16, 1.02, 0.87, 0.71, 0.55],
                      [0.4, 0.57, 0.73, 0.88, 1.02, 1.14, 1.24, 1.32, 1.37, 1.4, 1.4, 1.37, 1.32, 1.24, 1.14, 1.02, 0.88, 0.73, 0.57, 0.4],
                      [0.25, 0.41, 0.57, 0.72, 0.86, 0.98, 1.08, 1.16, 1.21, 1.24, 1.24, 1.21, 1.16, 1.08, 0.98, 0.86, 0.72, 0.57, 0.41, 0.25],
                      [0.08, 0.25, 0.41, 0.56, 0.7, 0.82, 0.92, 1.0, 1.05, 1.08, 1.08, 1.05, 1.0, 0.92, 0.82, 0.7, 0.56, 0.41, 0.25, 0.08],
                      [-0.08, 0.08, 0.24, 0.39, 0.53, 0.65, 0.75, 0.83, 0.89, 0.91, 0.91, 0.89, 0.83, 0.75, 0.65, 0.53, 0.39, 0.24, 0.08, -0.08],
                      [-0.25, -0.08, 0.08, 0.23, 0.37, 0.49, 0.59, 0.67, 0.72, 0.75, 0.75, 0.72, 0.67, 0.59, 0.49, 0.37, 0.23, 0.08, -0.08, -0.25],
                      [-0.4, -0.24, -0.08, 0.07, 0.21, 0.33, 0.44, 0.51, 0.57, 0.59, 0.59, 0.57, 0.51, 0.44, 0.33, 0.21, 0.07, -0.08, -0.24, -0.4],
                      [-0.55, -0.38, -0.22, -0.07, 0.07, 0.19, 0.29, 0.37, 0.42, 0.45, 0.45, 0.42, 0.37, 0.29, 0.19, 0.07, -0.07, -0.22, -0.38, -0.55],
                      [-0.68, -0.51, -0.35, -0.2, -0.06, 0.06, 0.16, 0.24, 0.29, 0.32, 0.32, 0.29, 0.24, 0.16, 0.06, -0.06, -0.2, -0.35, -0.51, -0.68],
                      [-0.79, -0.62, -0.46, -0.31, -0.17, -0.05, 0.05, 0.13, 0.18, 0.21, 0.21, 0.18, 0.13, 0.05, -0.05, -0.17, -0.31, -0.46, -0.62, -0.79],
                      [-0.88, -0.71, -0.55, -0.4, -0.27, -0.14, -0.04, 0.04, 0.09, 0.12, 0.12, 0.09, 0.04, -0.04, -0.14, -0.27, -0.4, -0.55, -0.71, -0.88],
                      [-0.95, -0.78, -0.62, -0.47, -0.33, -0.21, -0.11, -0.03, 0.02, 0.05, 0.05, 0.02, -0.03, -0.11, -0.21, -0.33, -0.47, -0.62, -0.78, -0.95],
                      [-0.99, -0.82, -0.66, -0.51, -0.37, -0.25, -0.15, -0.07, -0.02, 0.01, 0.01, -0.02, -0.07, -0.15, -0.25, -0.37, -0.51, -0.66, -0.82, -0.99],
                      [-1.0, -0.84, -0.68, -0.52, -0.39, -0.26, -0.16, -0.08, -0.03, -0.0, -0.0, -0.03, -0.08, -0.16, -0.26, -0.39, -0.52, -0.68, -0.84, -1.0]],
                type: 'contour',
                name: '',
                showscale: false,
              },
              {
                mode: 'markers',
                x: [0.09, 0.49, 0.23, 0.5, 0.63, 0.88, 0.85, 0.23, 0.99, 0.05, 0.25, 0.42, 0.92, 0.5, 0.24, 0.38, 0.57, 0.65, 0.79, 0.69, 0.16, 0.06, 0.14, 0.44, 0.75, 0.41, 0.22, 0.7, 0.11, 0.29, 0.1, 0.64, 0.35, 0.63, 0.45, 0.29, 0.57, 0.77, 0.48, 0.76, 0.38, 0.22,
                  0.2, 0.71, 0.19, 0.34, 0.3, 0.94, 0.18, 0.01, 0.99, 0.03, 0.27, 0.29, 0.57, 0.96, 0.21, 0.05, 0.48, 0.83, 0.81, 0.53, 0.3, 0.67, 0.39, 0.21, 0.38, 0.25, 0.89, 0.05, 0.37, 0.28, 0.26, 0.63, 0.35, 0.6, 0.82, 0.96, 0.7, 0.93, 0.83, 0.6, 0.03, 0.16,
                  0.7, 0.84, 0.16, 0.29, 0.55, 0.3, 0.32, 0.05, 0.85, 0.11, 0.39, 0.92, 0.01, 0.97, 0.85, 0.41],
                y: [0.99, 0.52, 0.4, 0.02, 0.24, 0.29, 0.33, 0.98, 0.81, 0.4, 0.51, 0.37, 0.89, 0.04, 0.96, 0.98, 0.05, 0.98, 0.91, 0.7, 0.89, 0.3, 0.41, 0.93, 0.17, 0.61, 0.18, 0.5, 0.51, 0.54, 0.7, 0.24, 0.88, 0.01, 0.89, 0.3, 0.94, 0.94, 0.54, 1.0, 0.81, 0.37,
                  0.71, 0.23, 0.4, 0.69, 0.96, 0.15, 0.95, 0.82, 0.64, 0.85, 0.3, 0.73, 0.84, 0.48, 0.22, 0.6, 0.59, 0.49, 0.04, 0.29, 0.47, 0.75, 0.49, 0.91, 0.05, 0.2, 0.4, 0.46, 0.14, 0.18, 0.68, 0.82, 0.53, 0.74, 0.63, 0.27, 0.73, 0.21, 0.12, 0.94, 0.49, 1.0,
                  0.82, 0.43, 0.3, 0.76, 0.32, 0.99, 0.44, 0.23, 0.83, 0.11, 0.58, 0.58, 0.21, 0.57, 0.04, 0.23],
                type: 'scatter',
                name: '',
              },
            ]}
            layout={{
              width: 450,
              height: 450,
              title: 'React Plotly Contour',
              hovermode: 'closest',
            }}
            config={{
              displayModeBar: false,
              scrollZoom: false,
              showLogo: false,
              legendPosition: false,
              showTips: false,
            }}
            onClick={(elem) => { this.props.clickDot(elem); }}
          />
        </div>
      </div>
    );
  }
}

PlotlyDemo.propTypes = {
};

const mapStateToProps = (state) => ({
  selectedDot: state.get('plotlyDemoReducer').selectedDot,
});

const mapDispatchToProps = (dispatch) => ({
  clickDot: (dot) => {
    dispatch(clickDot(dot));
  },
});

PlotlyDemo.propTypes = {
  clickDot: PropTypes.func,
  selectedDot: PropTypes.oject,
};


export default connect(mapStateToProps, mapDispatchToProps)(PlotlyDemo);
